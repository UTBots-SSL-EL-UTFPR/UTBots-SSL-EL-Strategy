
1. Definir EVENTOS: A e B (core/event_callback) 




8. movimentação Ominidirecional (finalizar 13/08) -> EM TESTES ||

9. kalman e predição (finalizar 13/08) -> testar qualidade / aplicar no programa ||



3. Definir Macro-estratégias
4. Definir Estratégias BOB


11. TODO -> converter dados encoders em variação de teta !!!!


//---------------------------------13/08------------------------------------------//
//COISAS A FAZER:

    1. Criar função em BOB.py para saber se a bola tem visão para o gol (podemos chutar)
        -> Criar nó de condição em Behaviour_tree/behaviors/common/condition.py para chute

        1. verifico se tenho Posse
        2. verifico se tem linha de chute
        2.1 nao tenho -> me movo 
        2.2.1 pra onde() 
        2.2.2 retorna running pra 2
        2.2 tenho, chuto

    
    2. Implementar sequencia de passe (ações e condições) em  Behaviour_tree/behaviors/common/condition.py

    3. Posicionamento

    4. sequencia para interceptar a bola/adversario 

    5. Definir EVENTOS: A e B (core/event_callback) 

    6. Definir Condition: X e Y (behaviours/common/Conditions)
        -> Definir condições ligadas às ações 
        -> implementar 

    7. acabar Bob_State: Villean  NÍVEL 3 DE URGẼNCIA (finalizar 13/08)
        -> Fazer Update gerar eventos e reagir ao campo
        -> atualizar o estado do bob

    8. Firmware do bob 
        -> definir mensagens
        -> definir envio e recep
        -> organizar 

    

// YUJI:
    -> MOVIMENTAÇÃO X

//WILLIAN
    -> 7.1

// VINI:
    -> 4.

// GRACIA:
    -> 1.

//DANILO: 
    -> 7.2

//Luzzi: 
    -> 8.

// Wesley: -> organizar receive. -> jogar wd_state denrto da field -> transf field.py em wdtste.py ||  2. Implementar sequencia de passe (ações e condições) em  Behaviour_tree/behaviors/common/condition.py



Behaviour_tree.trees.bob_trees.sub_trees.test

python3 -m Behaviour_tree.trees.bob_trees.sub_trees.test